[{"C:\\Learning\\React\\wave-music\\src\\components\\Song\\index.js":"1","C:\\Learning\\React\\wave-music\\src\\components\\Nav\\style\\index.js":"2","C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\style\\LibrarySongContainer.js":"3","C:\\Learning\\React\\wave-music\\src\\components\\Library\\style\\index.js":"4","C:\\Learning\\React\\wave-music\\src\\components\\Player\\Player.js":"5","C:\\Learning\\React\\wave-music\\src\\components\\Nav\\Nav.js":"6","C:\\Learning\\React\\wave-music\\src\\components\\Song\\Song.js":"7","C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\index.js":"8","C:\\Learning\\React\\wave-music\\src\\App.js":"9","C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\index.js":"10","C:\\Learning\\React\\wave-music\\src\\assets\\style.js":"11","C:\\Learning\\React\\wave-music\\src\\index.js":"12","C:\\Learning\\React\\wave-music\\src\\data.js":"13","C:\\Learning\\React\\wave-music\\src\\components\\Library\\Library.js":"14","C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\index.js":"15","C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\TimeControl.js":"16","C:\\Learning\\React\\wave-music\\src\\components\\Player\\index.js":"17","C:\\Learning\\React\\wave-music\\src\\animate.js":"18","C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Input.js":"19","C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Animate.js":"20","C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\AnimateContainerVolume.js":"21","C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Track.js":"22","C:\\Learning\\React\\wave-music\\src\\components\\SpanAnim.js":"23","C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\PlayerContainer.js":"24","C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\style\\index.js":"25"},{"size":52,"mtime":1606321777401,"results":"26","hashOfConfig":"27"},{"size":605,"mtime":1606720157202,"results":"28","hashOfConfig":"27"},{"size":460,"mtime":1606734445717,"results":"29","hashOfConfig":"27"},{"size":701,"mtime":1606734391473,"results":"30","hashOfConfig":"27"},{"size":3210,"mtime":1606725264110,"results":"31","hashOfConfig":"27"},{"size":567,"mtime":1606398028051,"results":"32","hashOfConfig":"27"},{"size":2834,"mtime":1606733668166,"results":"33","hashOfConfig":"27"},{"size":1141,"mtime":1606733551071,"results":"34","hashOfConfig":"27"},{"size":1717,"mtime":1606725054994,"results":"35","hashOfConfig":"27"},{"size":439,"mtime":1606725248483,"results":"36","hashOfConfig":"27"},{"size":1081,"mtime":1606727922421,"results":"37","hashOfConfig":"27"},{"size":342,"mtime":1606454440941,"results":"38","hashOfConfig":"27"},{"size":4017,"mtime":1606397401426,"results":"39","hashOfConfig":"27"},{"size":631,"mtime":1606467345692,"results":"40","hashOfConfig":"27"},{"size":73,"mtime":1606375215280,"results":"41","hashOfConfig":"27"},{"size":210,"mtime":1606448783932,"results":"42","hashOfConfig":"27"},{"size":58,"mtime":1606321619397,"results":"43","hashOfConfig":"27"},{"size":565,"mtime":1606732257379,"results":"44","hashOfConfig":"27"},{"size":582,"mtime":1606734454128,"results":"45","hashOfConfig":"27"},{"size":480,"mtime":1606733538538,"results":"46","hashOfConfig":"27"},{"size":293,"mtime":1606732792147,"results":"47","hashOfConfig":"27"},{"size":224,"mtime":1606732736733,"results":"48","hashOfConfig":"27"},{"size":646,"mtime":1606733634861,"results":"49","hashOfConfig":"27"},{"size":216,"mtime":1606448807600,"results":"50","hashOfConfig":"27"},{"size":582,"mtime":1606449057017,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1pjjbzf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Learning\\React\\wave-music\\src\\components\\Song\\index.js",[],["106","107"],"C:\\Learning\\React\\wave-music\\src\\components\\Nav\\style\\index.js",[],["108","109"],"C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\style\\LibrarySongContainer.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Library\\style\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Player\\Player.js",["110"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSongIsPlaying } from \"../../store/actions/songs\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  PlayerContainer,\r\n  PlayerInput,\r\n  TimeControl,\r\n  Paragraph,\r\n  PlayControl,\r\n  AnimateTrack,\r\n  Track,\r\n} from \"./style\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setSongIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  currentSong,\r\n  setCurrentSong,\r\n}) => {\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.pause();\r\n      setSongIsPlaying(false);\r\n    } else {\r\n      audioRef.play();\r\n      setSongIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    const currentTime = e.target.value;\r\n    audioRef.currentTime = currentTime;\r\n    setSongInfo({ ...songInfo, currentTime });\r\n  };\r\n\r\n  const skipTrackHandker = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.play();\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <PlayerContainer>\r\n      <TimeControl>\r\n        <Paragraph>{getTime(songInfo.currentTime)}</Paragraph>\r\n        <Track\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n        >\r\n          <PlayerInput\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <AnimateTrack style={trackAnim} />\r\n        </Track>\r\n        <Paragraph>\r\n          {songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}\r\n        </Paragraph>\r\n      </TimeControl>\r\n      <PlayControl>\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandker(\"skip-back\")}\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandker(\"skip-forward\")}\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </PlayControl>\r\n    </PlayerContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ isPlaying, audioRef, songsData }) => {\r\n  return { isPlaying, audioRef, songs: songsData };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setSongIsPlaying })(Player);\r\n","C:\\Learning\\React\\wave-music\\src\\components\\Nav\\Nav.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\Song.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\App.js",[],["111","112"],"C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\assets\\style.js",[],"C:\\Learning\\React\\wave-music\\src\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\data.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Library\\Library.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\TimeControl.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Player\\index.js",[],"C:\\Learning\\React\\wave-music\\src\\animate.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Input.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Animate.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\AnimateContainerVolume.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Song\\style\\Track.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\SpanAnim.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\Player\\style\\PlayerContainer.js",[],"C:\\Learning\\React\\wave-music\\src\\components\\LibrarySong\\style\\index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["125"],["126"],"no-global-assign","no-unsafe-negation"]